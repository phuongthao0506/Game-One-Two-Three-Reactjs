{"ast":null,"code":"const burgerState = {\n  burger: {\n    salad: 1,\n    cheese: 1,\n    beef: 1\n  },\n  menu: {\n    salad: 10,\n    cheese: 10,\n    beef: 10\n  },\n  total: 30\n};\nexport const BurgerReducer = (state = burgerState, action) => {\n  switch (action.type) {\n    case \"Tang_giam\":\n      let burgerNew = { ...state.burger\n      };\n      let {\n        propsBurger,\n        quantity\n      } = action;\n      burgerNew[propsBurger] += quantity;\n\n      if (burgerNew[propsBurger] < 1) {\n        burgerNew[propsBurger] = 0;\n      }\n\n      state.burger = burgerNew;\n      return { ...state\n      };\n  }\n\n  return { ...state\n  };\n};\n_c = BurgerReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerReducer\");","map":{"version":3,"sources":["/Users/co/workspace/cypersoft/reactjs/PlayGame/playgame1/src/Redux/Reducer/BurgerReducer.jsx"],"names":["burgerState","burger","salad","cheese","beef","menu","total","BurgerReducer","state","action","type","burgerNew","propsBurger","quantity"],"mappings":"AAAA,MAAOA,WAAW,GAAE;AAChBC,EAAAA,MAAM,EAAC;AAACC,IAAAA,KAAK,EAAC,CAAP;AAASC,IAAAA,MAAM,EAAC,CAAhB;AAAkBC,IAAAA,IAAI,EAAC;AAAvB,GADS;AAEhBC,EAAAA,IAAI,EAAC;AACDH,IAAAA,KAAK,EAAC,EADL;AAEDC,IAAAA,MAAM,EAAC,EAFN;AAGDC,IAAAA,IAAI,EAAC;AAHJ,GAFW;AAOhBE,EAAAA,KAAK,EAAC;AAPU,CAApB;AASA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAER,WAAR,EAAoBS,MAApB,KAA6B;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,UAAIC,SAAS,GAAG,EAAC,GAAGH,KAAK,CAACP;AAAV,OAAhB;AACA,UAAI;AAAEW,QAAAA,WAAF;AAAcC,QAAAA;AAAd,UAAyBJ,MAA7B;AACAE,MAAAA,SAAS,CAACC,WAAD,CAAT,IAAyBC,QAAzB;;AACA,UAAGF,SAAS,CAACC,WAAD,CAAT,GAAuB,CAA1B,EAA4B;AACxBD,QAAAA,SAAS,CAACC,WAAD,CAAT,GAAuB,CAAvB;AAEH;;AACDJ,MAAAA,KAAK,CAACP,MAAN,GAAaU,SAAb;AACA,aAAM,EAAC,GAAGH;AAAJ,OAAN;AAVR;;AAYA,SAAM,EAAC,GAAGA;AAAJ,GAAN;AACH,CAdM;KAAMD,a","sourcesContent":["const  burgerState= {\n    burger:{salad:1,cheese:1,beef:1},\n    menu:{\n        salad:10,\n        cheese:10,\n        beef:10\n        },\n    total:30\n}\nexport const BurgerReducer = (state= burgerState,action)=>{\n    switch (action.type){\n        case \"Tang_giam\":\n            let burgerNew = {...state.burger}\n            let { propsBurger,quantity}= action\n            burgerNew[propsBurger] +=quantity\n            if(burgerNew[propsBurger]<1){\n                burgerNew[propsBurger]=0\n                \n            }\n            state.burger=burgerNew\n            return{...state}\n    }\n    return{...state}\n}"]},"metadata":{},"sourceType":"module"}