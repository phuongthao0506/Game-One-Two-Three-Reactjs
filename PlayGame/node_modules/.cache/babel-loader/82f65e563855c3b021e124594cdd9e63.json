{"ast":null,"code":"import dataPhone from '../../data/dataPhone.json'; // khởi tạo giá trị ban đầu của store\n// đặt state thay đổi chi tiết ở đây vì component này chứa giao diện thay đổi lÀ MODAL và gián tiếp chứa nút thay đổi là product list\n\nconst stateGioHang = {\n  gioHang: []\n}; // action : dữ liệu gửi lên từ compnent \n\nexport const GioHangReducer = (state = stateGioHang, action) => {\n  switch (action.type) {\n    case 'THEM_GIO_HANG':\n      {\n        // xử lý logic thêm gior hàng ( phương thức trong function them gio hang )\n        // phải tạo 1 mảng mới để xử lý thì giao diện mới render ra đưọc vì redux có tính bất biến \n        let gioHangCapNhap = [...state.gioHang];\n        let index = gioHangCapNhap.findIndex(sp => sp.maSP === action.spThemGioHang.maSP);\n\n        if (index == -1) {\n          gioHangCapNhap.push(action.spThemGioHang);\n        } else {\n          gioHangCapNhap[index].soLuong += 1;\n        } // set lai state = this,setState\n\n\n        state.gioHang = gioHangCapNhap; // trả lại về state \n        // cap nhap lai state đôi vs arr or obj thì cần thay thế nó can them \"...\" thì redux mới hiểu ,\n        // gọi là immtable của redux\n\n        return { ...state\n        };\n      }\n\n    case 'XOA_GIO_HANG':\n      {\n        let gioHangCapNhap = [...state.gioHang].filter(sp => sp.maSP !== action.spXoa.maSP);\n        state.gioHang = gioHangCapNhap;\n        return { ...state\n        };\n      }\n\n    case 'TANG_GIAM_SO_LUONG':\n      {\n        let {\n          index,\n          sl\n        } = action;\n        let gioHangCapNhap = [...state.gioHang];\n        gioHangCapNhap[index].soLuong += sl;\n\n        if (gioHangCapNhap[index].soLuong < 1) {\n          gioHangCapNhap[index].soLuong = 1;\n          alert(\" Số lượng sản phẩm phải lớn hơn 1 \");\n        }\n\n        state.gioHang = gioHangCapNhap;\n        return { ...state\n        };\n      }\n  }\n\n  return { ...state\n  };\n};\n_c = GioHangReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GioHangReducer\");","map":{"version":3,"sources":["/Users/co/workspace/cypersoft/reactjs/PlayGame/playgame1/src/Redux/Reducer/GioHangReducer.jsx"],"names":["dataPhone","stateGioHang","gioHang","GioHangReducer","state","action","type","gioHangCapNhap","index","findIndex","sp","maSP","spThemGioHang","push","soLuong","filter","spXoa","sl","alert"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,2BAAtB,C,CACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB,C,CAIA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AAAsB;AAClB;AACA;AACA,YAAIC,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACF,OAAV,CAArB;AACA,YAAIM,KAAK,GAAGD,cAAc,CAACE,SAAf,CAAyBC,EAAE,IAAIA,EAAE,CAACC,IAAH,KAAYN,MAAM,CAACO,aAAP,CAAqBD,IAAhE,CAAZ;;AACA,YAAIH,KAAK,IAAI,CAAC,CAAd,EAAiB;AACbD,UAAAA,cAAc,CAACM,IAAf,CAAoBR,MAAM,CAACO,aAA3B;AACH,SAFD,MAEO;AACHL,UAAAA,cAAc,CAACC,KAAD,CAAd,CAAsBM,OAAtB,IAAiC,CAAjC;AACH,SATiB,CAUlB;;;AACAV,QAAAA,KAAK,CAACF,OAAN,GAAgBK,cAAhB,CAXkB,CAYlB;AACA;AACI;;AACJ,eAAO,EAAE,GAAGH;AAAL,SAAP;AACH;;AACD,SAAK,cAAL;AAAoB;AAChB,YAAIG,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACF,OAAV,EAAmBa,MAAnB,CAA0BL,EAAE,IAAEA,EAAE,CAACC,IAAH,KAAWN,MAAM,CAACW,KAAP,CAAaL,IAAtD,CAArB;AACAP,QAAAA,KAAK,CAACF,OAAN,GAAcK,cAAd;AACA,eAAM,EAAC,GAAGH;AAAJ,SAAN;AAEH;;AACD,SAAK,oBAAL;AAA0B;AACtB,YAAI;AAACI,UAAAA,KAAD;AAAOS,UAAAA;AAAP,YAAWZ,MAAf;AACA,YAAIE,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACF,OAAV,CAArB;AACAK,QAAAA,cAAc,CAACC,KAAD,CAAd,CAAsBM,OAAtB,IAAiCG,EAAjC;;AACA,YAAGV,cAAc,CAACC,KAAD,CAAd,CAAsBM,OAAtB,GAA8B,CAAjC,EAAmC;AAC/BP,UAAAA,cAAc,CAACC,KAAD,CAAd,CAAsBM,OAAtB,GAA8B,CAA9B;AACAI,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;;AACDd,QAAAA,KAAK,CAACF,OAAN,GAAcK,cAAd;AACA,eAAM,EAAC,GAAGH;AAAJ,SAAN;AACH;AAlCL;;AAsCA,SAAO,EAAE,GAAGA;AAAL,GAAP;AACH,CAzCM;KAAMD,c","sourcesContent":["import dataPhone from '../../data/dataPhone.json'\n// khởi tạo giá trị ban đầu của store\n\n// đặt state thay đổi chi tiết ở đây vì component này chứa giao diện thay đổi lÀ MODAL và gián tiếp chứa nút thay đổi là product list\n\nconst stateGioHang = {\n    gioHang: []\n\n}\n// action : dữ liệu gửi lên từ compnent \nexport const GioHangReducer = (state = stateGioHang, action) => {\n   \n    switch (action.type) {\n        case 'THEM_GIO_HANG': {\n            // xử lý logic thêm gior hàng ( phương thức trong function them gio hang )\n            // phải tạo 1 mảng mới để xử lý thì giao diện mới render ra đưọc vì redux có tính bất biến \n            let gioHangCapNhap = [...state.gioHang]\n            let index = gioHangCapNhap.findIndex(sp => sp.maSP === action.spThemGioHang.maSP)\n            if (index == -1) {\n                gioHangCapNhap.push(action.spThemGioHang)\n            } else {\n                gioHangCapNhap[index].soLuong += 1\n            }\n            // set lai state = this,setState\n            state.gioHang = gioHangCapNhap\n            // trả lại về state \n            // cap nhap lai state đôi vs arr or obj thì cần thay thế nó can them \"...\" thì redux mới hiểu ,\n                // gọi là immtable của redux\n            return { ...state }\n        }\n        case 'XOA_GIO_HANG':{\n            let gioHangCapNhap = [...state.gioHang].filter(sp=>sp.maSP !==action.spXoa.maSP)\n            state.gioHang=gioHangCapNhap\n            return{...state}\n\n        }\n        case 'TANG_GIAM_SO_LUONG':{\n            let {index,sl}=action\n            let gioHangCapNhap = [...state.gioHang]\n            gioHangCapNhap[index].soLuong += sl\n            if(gioHangCapNhap[index].soLuong<1){\n                gioHangCapNhap[index].soLuong=1 \n                alert(\" Số lượng sản phẩm phải lớn hơn 1 \")\n            }\n            state.gioHang=gioHangCapNhap\n            return{...state}\n        }\n           \n\n    }\n    return { ...state }\n}\n"]},"metadata":{},"sourceType":"module"}